# -*- coding: utf-8 -*-
"""sentiment_program.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1djTT2DBBKVYA2yItIwoBakEyPBaucnyu
"""

from textblob import TextBlob
import pandas as pd
import re

def findSentiment(text):
  obj = TextBlob(text)
  sentiment = obj.sentiment.polarity 
  if(sentiment==0):
    return 'Neutral'
  if(sentiment<0):
    return 'Negative' 
  if(sentiment>0):
    return 'Positive'

df = pd.read_csv('https://raw.githubusercontent.com/Magicfence2002/basic_data_files/master/Sentiment_fin.csv')

#Tweet cleaner

def cleanText(text):
  text = re.sub(r'@[A-Za-z0-9]+','', text)
  text = re.sub(r'#','',text)
  text = re.sub(r'RT[\s]+','',text)
  text = re.sub(r'https:\/\/\$+:','',text)
  text = re.sub(r':','',text)
  text = re.sub(r'w/','',text)
  text = re.sub(r'_','',text)
  return text

df['text'] = df['text'].apply(cleanText)

pos_count = 0
neg_count = 0
neut_count = 0
tot = len(df)
for i in range(0,len(df)):
  if(findSentiment(df['text'][i])== 'Positive'):
    pos_count = pos_count+1
  if(findSentiment(df['text'][i])== 'Negative'):
    neg_count = neg_count+1
  if(findSentiment(df['text'][i])== 'Neutral'):
    neut_count = neut_count+1
netpos = (pos_count / tot)*100
netneg = (neg_count / tot)*100
netneut = (neut_count / tot)*100
print('Positive weight : '+str(netpos)+' %')
print('Negative weight : '+str(netneg)+' %')
print('Neutral weight : '+str(netneut)+' %')
